# Generated by Django 5.0.7 on 2025-07-31 12:30

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('vehicles', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BookingAddOn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('addon_type', models.CharField(choices=[('gps', 'GPS Navigation'), ('child_seat', 'Child Seat'), ('additional_driver', 'Additional Driver'), ('wifi', 'WiFi Hotspot'), ('ski_rack', 'Ski Rack'), ('bike_rack', 'Bike Rack'), ('roadside_assistance', 'Roadside Assistance'), ('fuel_service', 'Fuel Service'), ('cleaning', 'Vehicle Cleaning'), ('delivery', 'Vehicle Delivery'), ('other', 'Other')], max_length=30)),
                ('description', models.TextField(blank=True, null=True)),
                ('pricing_type', models.CharField(choices=[('per_day', 'Per Day'), ('per_booking', 'Per Booking'), ('percentage', 'Percentage of Rental')], default='per_day', max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Booking Add-on',
                'verbose_name_plural': 'Booking Add-ons',
                'db_table': 'booking_addons',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('booking_reference', models.CharField(editable=False, max_length=20, unique=True)),
                ('pickup_date', models.DateTimeField()),
                ('return_date', models.DateTimeField()),
                ('actual_pickup_date', models.DateTimeField(blank=True, null=True)),
                ('actual_return_date', models.DateTimeField(blank=True, null=True)),
                ('pickup_location', models.CharField(max_length=200)),
                ('return_location', models.CharField(max_length=200)),
                ('pickup_address', models.TextField(blank=True, null=True)),
                ('return_address', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Confirmation'), ('confirmed', 'Confirmed'), ('active', 'Active Rental'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partially Paid'), ('paid', 'Fully Paid'), ('refunded', 'Refunded'), ('failed', 'Payment Failed')], default='pending', max_length=20)),
                ('daily_rate', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_days', models.PositiveIntegerField()),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('additional_fees', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('security_deposit', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pickup_mileage', models.PositiveIntegerField(blank=True, null=True)),
                ('return_mileage', models.PositiveIntegerField(blank=True, null=True)),
                ('pickup_fuel_level', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('return_fuel_level', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('special_requests', models.TextField(blank=True, null=True)),
                ('customer_notes', models.TextField(blank=True, null=True)),
                ('staff_notes', models.TextField(blank=True, null=True)),
                ('insurance_selected', models.BooleanField(default=False)),
                ('insurance_type', models.CharField(blank=True, max_length=50, null=True)),
                ('insurance_cost', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('loyalty_points_used', models.PositiveIntegerField(default=0)),
                ('loyalty_points_earned', models.PositiveIntegerField(default=0)),
                ('promotion_code', models.CharField(blank=True, max_length=50, null=True)),
                ('confirmation_sent', models.BooleanField(default=False)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('pickup_notification_sent', models.BooleanField(default=False)),
                ('return_notification_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('assigned_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_bookings', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('pickup_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pickup_bookings', to=settings.AUTH_USER_MODEL)),
                ('primary_driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_driver_bookings', to=settings.AUTH_USER_MODEL)),
                ('return_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='return_bookings', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='vehicles.vehicle')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'db_table': 'bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingAdditionalDriver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_fee', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('is_approved', models.BooleanField(default=False)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_driver_assignments', to='bookings.booking')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Booking Additional Driver',
                'verbose_name_plural': 'Booking Additional Drivers',
                'db_table': 'booking_additional_drivers',
                'unique_together': {('booking', 'driver')},
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='additional_drivers',
            field=models.ManyToManyField(blank=True, through='bookings.BookingAdditionalDriver', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='BookingAddOnAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('notes', models.TextField(blank=True, null=True)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('addon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookings.bookingaddon')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addon_assignments', to='bookings.booking')),
            ],
            options={
                'verbose_name': 'Booking Add-on Assignment',
                'verbose_name_plural': 'Booking Add-on Assignments',
                'db_table': 'booking_addon_assignments',
            },
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['customer', 'status'], name='bookings_custome_b789e2_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['vehicle', 'pickup_date'], name='bookings_vehicle_39781a_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['status', 'pickup_date'], name='bookings_status_26658c_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['booking_reference'], name='bookings_booking_4d53ac_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['created_at'], name='bookings_created_118d3e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bookingaddonassignment',
            unique_together={('booking', 'addon')},
        ),
    ]
