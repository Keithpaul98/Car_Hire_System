# Generated by Django 5.0.7 on 2025-07-31 12:30

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VehicleBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brand_logos/')),
                ('country_of_origin', models.CharField(blank=True, max_length=50, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Vehicle Brand',
                'verbose_name_plural': 'Vehicle Brands',
                'db_table': 'vehicle_brands',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VehicleCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Vehicle Category',
                'verbose_name_plural': 'Vehicle Categories',
                'db_table': 'vehicle_categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='VehicleFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('additional_cost', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Vehicle Feature',
                'verbose_name_plural': 'Vehicle Features',
                'db_table': 'vehicle_features',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2030)])),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('license_plate', models.CharField(max_length=20, unique=True)),
                ('vin_number', models.CharField(blank=True, max_length=17, null=True, unique=True)),
                ('engine_size', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('fuel_type', models.CharField(choices=[('petrol', 'Petrol'), ('diesel', 'Diesel'), ('hybrid', 'Hybrid'), ('electric', 'Electric'), ('lpg', 'LPG')], default='petrol', max_length=20)),
                ('transmission', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic'), ('cvt', 'CVT')], default='manual', max_length=20)),
                ('seating_capacity', models.PositiveIntegerField(default=5)),
                ('doors', models.PositiveIntegerField(default=4)),
                ('fuel_tank_capacity', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('status', models.CharField(choices=[('available', 'Available'), ('rented', 'Rented'), ('maintenance', 'Under Maintenance'), ('repair', 'Under Repair'), ('retired', 'Retired'), ('sold', 'Sold')], default='available', max_length=20)),
                ('condition', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor')], default='good', max_length=20)),
                ('current_mileage', models.PositiveIntegerField(default=0)),
                ('last_service_mileage', models.PositiveIntegerField(blank=True, null=True)),
                ('next_service_due', models.PositiveIntegerField(blank=True, null=True)),
                ('daily_rate', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('weekly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('monthly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('security_deposit', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('current_location', models.CharField(blank=True, max_length=200, null=True)),
                ('gps_enabled', models.BooleanField(default=False)),
                ('last_gps_update', models.DateTimeField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('registration_expiry', models.DateField(blank=True, null=True)),
                ('insurance_company', models.CharField(blank=True, max_length=100, null=True)),
                ('insurance_policy_number', models.CharField(blank=True, max_length=50, null=True)),
                ('insurance_expiry', models.DateField(blank=True, null=True)),
                ('insurance_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicles_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'db_table': 'vehicles',
            },
        ),
        migrations.CreateModel(
            name='VehicleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='vehicle_images/')),
                ('image_type', models.CharField(choices=[('exterior', 'Exterior'), ('interior', 'Interior'), ('engine', 'Engine'), ('trunk', 'Trunk'), ('damage', 'Damage'), ('other', 'Other')], default='exterior', max_length=20)),
                ('caption', models.CharField(blank=True, max_length=200, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='vehicles.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Image',
                'verbose_name_plural': 'Vehicle Images',
                'db_table': 'vehicle_images',
                'ordering': ['vehicle', 'sort_order'],
            },
        ),
        migrations.CreateModel(
            name='VehicleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('year_introduced', models.PositiveIntegerField(blank=True, null=True)),
                ('year_discontinued', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='vehicles.vehiclebrand')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vehicles.vehiclecategory')),
            ],
            options={
                'verbose_name': 'Vehicle Model',
                'verbose_name_plural': 'Vehicle Models',
                'db_table': 'vehicle_models',
                'ordering': ['brand__name', 'name'],
                'unique_together': {('brand', 'name')},
            },
        ),
        migrations.AddField(
            model_name='vehicle',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='vehicles.vehiclemodel'),
        ),
        migrations.CreateModel(
            name='VehicleSafetyEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_type', models.CharField(choices=[('fire_extinguisher', 'Fire Extinguisher'), ('first_aid_kit', 'First Aid Kit'), ('warning_triangle', 'Warning Triangle'), ('spare_tire', 'Spare Tire'), ('jack', 'Jack'), ('jumper_cables', 'Jumper Cables'), ('emergency_kit', 'Emergency Kit'), ('reflective_vest', 'Reflective Vest')], max_length=30)),
                ('status', models.CharField(choices=[('present', 'Present'), ('missing', 'Missing'), ('damaged', 'Damaged'), ('expired', 'Expired')], default='present', max_length=20)),
                ('brand', models.CharField(blank=True, max_length=50, null=True)),
                ('model_number', models.CharField(blank=True, max_length=50, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=50, null=True)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('last_inspection_date', models.DateField(blank=True, null=True)),
                ('next_inspection_due', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='safety_equipment', to='vehicles.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Safety Equipment',
                'verbose_name_plural': 'Vehicle Safety Equipment',
                'db_table': 'vehicle_safety_equipment',
            },
        ),
        migrations.CreateModel(
            name='VehicleFeatureAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_working', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('assigned_date', models.DateTimeField(auto_now_add=True)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_assignments', to='vehicles.vehiclefeature')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_assignments', to='vehicles.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Feature Assignment',
                'verbose_name_plural': 'Vehicle Feature Assignments',
                'db_table': 'vehicle_feature_assignments',
                'unique_together': {('vehicle', 'feature')},
            },
        ),
        migrations.CreateModel(
            name='VehicleMaintenanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(choices=[('routine', 'Routine Service'), ('repair', 'Repair'), ('inspection', 'Inspection'), ('cleaning', 'Cleaning'), ('tire_change', 'Tire Change'), ('oil_change', 'Oil Change'), ('brake_service', 'Brake Service'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('scheduled_date', models.DateTimeField()),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('service_provider', models.CharField(blank=True, max_length=200, null=True)),
                ('technician_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mileage_at_service', models.PositiveIntegerField(blank=True, null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('parts_used', models.JSONField(blank=True, default=list, null=True)),
                ('labor_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=50, null=True)),
                ('warranty_expiry', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='vehicles.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Maintenance Record',
                'verbose_name_plural': 'Vehicle Maintenance Records',
                'db_table': 'vehicle_maintenance_records',
                'ordering': ['-scheduled_date'],
                'indexes': [models.Index(fields=['vehicle', 'status'], name='vehicle_mai_vehicle_02e133_idx'), models.Index(fields=['scheduled_date'], name='vehicle_mai_schedul_7f57ae_idx'), models.Index(fields=['maintenance_type'], name='vehicle_mai_mainten_16c518_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['status'], name='vehicles_status_e44f2b_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['model', 'year'], name='vehicles_model_i_f1253e_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['daily_rate'], name='vehicles_daily_r_d10af1_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['is_active', 'is_featured'], name='vehicles_is_acti_839a22_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['created_at'], name='vehicles_created_b41437_idx'),
        ),
        migrations.AddIndex(
            model_name='vehiclesafetyequipment',
            index=models.Index(fields=['vehicle', 'status'], name='vehicle_saf_vehicle_f898d6_idx'),
        ),
        migrations.AddIndex(
            model_name='vehiclesafetyequipment',
            index=models.Index(fields=['expiry_date'], name='vehicle_saf_expiry__63bbaf_idx'),
        ),
        migrations.AddIndex(
            model_name='vehiclesafetyequipment',
            index=models.Index(fields=['next_inspection_due'], name='vehicle_saf_next_in_4293d7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vehiclesafetyequipment',
            unique_together={('vehicle', 'equipment_type')},
        ),
    ]
