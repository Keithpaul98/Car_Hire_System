# Generated by Django 5.0.7 on 2025-07-31 12:30

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookings', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('method_type', models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('bank_transfer', 'Bank Transfer'), ('paypal', 'PayPal'), ('cash', 'Cash'), ('check', 'Check'), ('mobile_payment', 'Mobile Payment'), ('cryptocurrency', 'Cryptocurrency')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('processing_fee_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('processing_fee_fixed', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_verification', models.BooleanField(default=False)),
                ('icon', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'db_table': 'payment_methods',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_id', models.CharField(editable=False, max_length=50, unique=True)),
                ('payment_type', models.CharField(choices=[('booking_payment', 'Booking Payment'), ('security_deposit', 'Security Deposit'), ('additional_charges', 'Additional Charges'), ('penalty', 'Penalty'), ('refund', 'Refund'), ('partial_refund', 'Partial Refund')], max_length=30)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='ZAR', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=20)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('gateway_transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('gateway_response', models.JSONField(blank=True, default=dict, null=True)),
                ('gateway_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('card_last_four', models.CharField(blank=True, max_length=4, null=True)),
                ('card_type', models.CharField(blank=True, max_length=20, null=True)),
                ('card_token', models.CharField(blank=True, max_length=100, null=True)),
                ('receipt_number', models.CharField(blank=True, max_length=50, null=True)),
                ('receipt_generated', models.BooleanField(default=False)),
                ('receipt_sent', models.BooleanField(default=False)),
                ('invoice_number', models.CharField(blank=True, max_length=50, null=True)),
                ('refund_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('refund_date', models.DateTimeField(blank=True, null=True)),
                ('refund_reason', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='bookings.booking')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_payments', to=settings.AUTH_USER_MODEL)),
                ('refunded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_refunds', to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payment.paymentmethod')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'db_table': 'payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('receipt_number', models.CharField(editable=False, max_length=50, unique=True)),
                ('issue_date', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='ZAR', max_length=3)),
                ('payment_method_used', models.CharField(max_length=100)),
                ('line_items', models.JSONField(default=list)),
                ('notes', models.TextField(blank=True, null=True)),
                ('template_used', models.CharField(default='default', max_length=100)),
                ('pdf_generated', models.BooleanField(default=False)),
                ('pdf_file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('sent_to_customer', models.BooleanField(default=False)),
                ('sent_date', models.DateTimeField(blank=True, null=True)),
                ('sent_to_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to=settings.AUTH_USER_MODEL)),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_receipts', to=settings.AUTH_USER_MODEL)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='receipt', to='payment.payment')),
            ],
            options={
                'verbose_name': 'Receipt',
                'verbose_name_plural': 'Receipts',
                'db_table': 'receipts',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='FinancialReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_name', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('daily_summary', 'Daily Summary'), ('weekly_summary', 'Weekly Summary'), ('monthly_summary', 'Monthly Summary'), ('revenue_analysis', 'Revenue Analysis'), ('payment_analysis', 'Payment Analysis'), ('customer_analysis', 'Customer Analysis'), ('vehicle_performance', 'Vehicle Performance'), ('custom', 'Custom Report')], max_length=30)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('filters', models.JSONField(blank=True, default=dict, null=True)),
                ('data', models.JSONField(default=dict)),
                ('summary_metrics', models.JSONField(default=dict)),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV')], default='pdf', max_length=10)),
                ('file_generated', models.BooleanField(default=False)),
                ('file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('is_scheduled', models.BooleanField(default=False)),
                ('schedule_frequency', models.CharField(blank=True, max_length=20, null=True)),
                ('next_generation_date', models.DateTimeField(blank=True, null=True)),
                ('email_recipients', models.JSONField(blank=True, default=list, null=True)),
                ('auto_send', models.BooleanField(default=False)),
                ('last_sent_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('generated_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Financial Report',
                'verbose_name_plural': 'Financial Reports',
                'db_table': 'financial_reports',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['report_type', 'start_date'], name='financial_r_report__a09e6e_idx'), models.Index(fields=['created_by', 'created_at'], name='financial_r_created_83592e_idx'), models.Index(fields=['is_scheduled', 'next_generation_date'], name='financial_r_is_sche_c411f5_idx')],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(editable=False, max_length=50, unique=True)),
                ('issue_date', models.DateField(auto_now_add=True)),
                ('due_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=15.0, max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('line_items', models.JSONField(default=list)),
                ('notes', models.TextField(blank=True, null=True)),
                ('terms_and_conditions', models.TextField(blank=True, null=True)),
                ('pdf_generated', models.BooleanField(default=False)),
                ('pdf_file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('sent_date', models.DateTimeField(blank=True, null=True)),
                ('sent_to_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('reminder_sent_count', models.PositiveIntegerField(default=0)),
                ('last_reminder_sent', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='bookings.booking')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_invoices', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'db_table': 'invoices',
                'ordering': ['-issue_date'],
                'indexes': [models.Index(fields=['customer', 'status'], name='invoices_custome_90a13d_idx'), models.Index(fields=['due_date', 'status'], name='invoices_due_dat_4b5593_idx'), models.Index(fields=['invoice_number'], name='invoices_invoice_7778bc_idx'), models.Index(fields=['issue_date'], name='invoices_issue_d_6fe766_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['booking', 'status'], name='payments_booking_52233d_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['customer', 'payment_date'], name='payments_custome_bad26e_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['transaction_id'], name='payments_transac_a1f824_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status', 'payment_date'], name='payments_status_811742_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['created_at'], name='payments_created_e3a130_idx'),
        ),
        migrations.AddIndex(
            model_name='receipt',
            index=models.Index(fields=['customer', 'issue_date'], name='receipts_custome_3fffc6_idx'),
        ),
        migrations.AddIndex(
            model_name='receipt',
            index=models.Index(fields=['receipt_number'], name='receipts_receipt_0f1a0f_idx'),
        ),
        migrations.AddIndex(
            model_name='receipt',
            index=models.Index(fields=['payment'], name='receipts_payment_a06f14_idx'),
        ),
    ]
