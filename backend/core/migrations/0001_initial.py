# Generated by Django 5.0.7 on 2025-07-31 12:30

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookings', '0001_initial'),
        ('vehicles', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LoyaltyProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.CharField(choices=[('bronze', 'Bronze'), ('silver', 'Silver'), ('gold', 'Gold'), ('platinum', 'Platinum')], max_length=20, unique=True)),
                ('min_points_required', models.PositiveIntegerField()),
                ('points_per_dollar', models.DecimalField(decimal_places=2, default=1.0, max_digits=4)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('benefits', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Loyalty Program',
                'verbose_name_plural': 'Loyalty Programs',
                'db_table': 'loyalty_programs',
                'ordering': ['min_points_required'],
            },
        ),
        migrations.CreateModel(
            name='IssueReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticket_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('issue_type', models.CharField(choices=[('vehicle_problem', 'Vehicle Problem'), ('service_complaint', 'Service Complaint'), ('billing_issue', 'Billing Issue'), ('booking_problem', 'Booking Problem'), ('accident_report', 'Accident Report'), ('breakdown', 'Vehicle Breakdown'), ('other', 'Other')], max_length=30)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('escalated', 'Escalated')], default='open', max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True, null=True)),
                ('resolution', models.TextField(blank=True, null=True)),
                ('resolution_date', models.DateTimeField(blank=True, null=True)),
                ('customer_satisfaction', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('customer_feedback', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_issues', to=settings.AUTH_USER_MODEL)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issue_reports', to='bookings.booking')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issue_reports', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_issues', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issue_reports', to='vehicles.vehicle')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_issues', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Issue Report',
                'verbose_name_plural': 'Issue Reports',
                'db_table': 'issue_reports',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['customer', 'status'], name='issue_repor_custome_3342b7_idx'), models.Index(fields=['status', 'priority'], name='issue_repor_status_14569a_idx'), models.Index(fields=['assigned_to', 'status'], name='issue_repor_assigne_46e969_idx'), models.Index(fields=['created_at'], name='issue_repor_created_e6ebf1_idx')],
            },
        ),
        migrations.CreateModel(
            name='Penalty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('penalty_type', models.CharField(choices=[('late_return', 'Late Return'), ('fuel_shortage', 'Fuel Shortage'), ('damage', 'Vehicle Damage'), ('cleaning_fee', 'Cleaning Fee'), ('smoking_fee', 'Smoking Fee'), ('mileage_overage', 'Mileage Overage'), ('traffic_violation', 'Traffic Violation'), ('lost_key', 'Lost Key'), ('other', 'Other')], max_length=30)),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('disputed', 'Disputed'), ('approved', 'Approved'), ('paid', 'Paid'), ('waived', 'Waived')], default='pending', max_length=20)),
                ('evidence_photos', models.JSONField(blank=True, default=list, null=True)),
                ('supporting_documents', models.JSONField(blank=True, default=list, null=True)),
                ('is_disputed', models.BooleanField(default=False)),
                ('dispute_reason', models.TextField(blank=True, null=True)),
                ('dispute_date', models.DateTimeField(blank=True, null=True)),
                ('dispute_resolution', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_penalties', to=settings.AUTH_USER_MODEL)),
                ('assessed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assessed_penalties', to=settings.AUTH_USER_MODEL)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='penalties', to='bookings.booking')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='penalties', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Penalty',
                'verbose_name_plural': 'Penalties',
                'db_table': 'penalties',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['booking', 'status'], name='penalties_booking_127e79_idx'), models.Index(fields=['customer', 'status'], name='penalties_custome_e74d33_idx'), models.Index(fields=['penalty_type', 'status'], name='penalties_penalty_55b739_idx'), models.Index(fields=['created_at'], name='penalties_created_7b20a1_idx')],
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed_amount', 'Fixed Amount'), ('free_days', 'Free Days')], max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=8)),
                ('max_discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('usage_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('per_customer_limit', models.PositiveIntegerField(default=1)),
                ('min_booking_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('min_rental_days', models.PositiveIntegerField(blank=True, null=True)),
                ('applicable_vehicle_categories', models.JSONField(blank=True, default=list, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Promotion',
                'verbose_name_plural': 'Promotions',
                'db_table': 'promotions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['code'], name='promotions_code_893bd9_idx'), models.Index(fields=['start_date', 'end_date'], name='promotions_start_d_e0aba6_idx'), models.Index(fields=['is_active', 'is_public'], name='promotions_is_acti_533531_idx')],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('overall_rating', models.PositiveIntegerField(choices=[(1, '1 Star - Poor'), (2, '2 Stars - Fair'), (3, '3 Stars - Good'), (4, '4 Stars - Very Good'), (5, '5 Stars - Excellent')])),
                ('vehicle_condition_rating', models.PositiveIntegerField(blank=True, choices=[(1, '1 Star - Poor'), (2, '2 Stars - Fair'), (3, '3 Stars - Good'), (4, '4 Stars - Very Good'), (5, '5 Stars - Excellent')], null=True)),
                ('service_rating', models.PositiveIntegerField(blank=True, choices=[(1, '1 Star - Poor'), (2, '2 Stars - Fair'), (3, '3 Stars - Good'), (4, '4 Stars - Very Good'), (5, '5 Stars - Excellent')], null=True)),
                ('value_for_money_rating', models.PositiveIntegerField(blank=True, choices=[(1, '1 Star - Poor'), (2, '2 Stars - Fair'), (3, '3 Stars - Good'), (4, '4 Stars - Very Good'), (5, '5 Stars - Excellent')], null=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('comment', models.TextField()),
                ('pros', models.TextField(blank=True, null=True)),
                ('cons', models.TextField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('moderation_notes', models.TextField(blank=True, null=True)),
                ('helpful_votes', models.PositiveIntegerField(default=0)),
                ('total_votes', models.PositiveIntegerField(default=0)),
                ('company_response', models.TextField(blank=True, null=True)),
                ('response_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='bookings.booking')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
                ('moderated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_reviews', to=settings.AUTH_USER_MODEL)),
                ('responded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='review_responses', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='vehicles.vehicle')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'db_table': 'reviews',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['vehicle', 'is_approved'], name='reviews_vehicle_f49cb3_idx'), models.Index(fields=['customer', 'created_at'], name='reviews_custome_785a9b_idx'), models.Index(fields=['overall_rating', 'is_approved'], name='reviews_overall_6c43ff_idx'), models.Index(fields=['is_featured', 'created_at'], name='reviews_is_feat_1907eb_idx')],
            },
        ),
    ]
